name: Release

on:
  push:
    tags:
    - '*'

env:
  DH_REGISTRY_IMAGE: kinduff/csgo_exporter
  GH_REGISTRY_IMAGE: ghcr.io/kinduff/csgo_exporter

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: ['1.13', '1.14', '1.15', '1.16']
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go_version }}
    - run: go get -t -v ./...
    - run: go test -v -race ./...
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        goos: [linux, windows, darwin, freebsd]
        goarch: ["386", amd64, arm]
        exclude:
        - goarch: arm
          goos: darwin
        - goarch: arm
          goos: windows
        - goarch: "386"
          goos: darwin
    steps:
    - uses: actions/checkout@v2
    - uses: wangyoucao577/go-release-action@v1.18
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "1.16"
        build_flags: -gcflags=all=-l
        ldflags: -w -s
        binary_name: "csgo_exporter"
        extra_files: LICENSE README.md
  build:
    name: Push to registries
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Prepare
      id: prepare
      run: |
        echo ::set-output name=version::${GITHUB_REF##*/}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:master
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        push: true
        tags: |
          ${{ env.DH_REGISTRY_IMAGE }}:latest
          ${{ env.DH_REGISTRY_IMAGE }}:${{ steps.prepare.outputs.version }}
          ${{ env.GH_REGISTRY_IMAGE }}:latest
          ${{ env.GH_REGISTRY_IMAGE }}:${{ steps.prepare.outputs.version }}
